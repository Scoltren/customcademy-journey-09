
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://earqddyjwuassqvgogqw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVhcnFkZHlqd3Vhc3NxdmdvZ3F3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDAxNTk5MTUsImV4cCI6MjA1NTczNTkxNX0.v3gqCC0Z50623f_T1F0MiVbEWBxF0wIvb9mnPkeOSWU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create storage buckets if they don't exist
const createBucketsIfNeeded = async () => {
  try {
    // Check if course-thumbnails bucket exists
    const { data: thumbnailBuckets, error: thumbnailCheckError } = await supabase.storage.listBuckets();
    
    const thumbnailBucketExists = thumbnailBuckets?.some(bucket => bucket.name === 'course-thumbnails');
    
    if (!thumbnailBucketExists) {
      console.log('Creating course-thumbnails bucket');
      const { error: thumbnailError } = await supabase.storage.createBucket('course-thumbnails', {
        public: true,
        fileSizeLimit: 10485760, // 10MB
      });
      
      if (thumbnailError) {
        console.error('Error creating thumbnail bucket:', thumbnailError);
      }
    }

    // Check if course-videos bucket exists
    const videoBucketExists = thumbnailBuckets?.some(bucket => bucket.name === 'course-videos');
    
    if (!videoBucketExists) {
      console.log('Creating course-videos bucket');
      const { error: videoError } = await supabase.storage.createBucket('course-videos', {
        public: true,
        fileSizeLimit: 104857600, // 100MB
      });
      
      if (videoError) {
        console.error('Error creating video bucket:', videoError);
      }
    }
  } catch (error) {
    console.error('Error creating buckets:', error);
  }
};

// Call the function to create buckets when this module is loaded
createBucketsIfNeeded();
